import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

data=pd.read_csv('/home/chaitanya/chaitanya/ML/Logistic_Regression/Logistic_Regression/Social_Network_Ads.csv')

x=data.iloc[:,[2,3]]

y=data.iloc[:,4]
from sklearn.cross_validation import train_test_split
xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.25,random_state=40)

from sklearn.preprocessing import StandardScaler
scale=StandardScaler()
X_train=scale.fit_transform(xtrain)
X_test=scale.transform(xtest)

from sklearn.preprocessing import StandardScaler
scale=StandardScaler()
X_train=scale.fit_transform(xtrain)
X_test=scale.transform(xtest)

from sklearn.linear_model import LogisticRegression
classifier=LogisticRegression(random_state=40)
classifier.fit(X_train,ytrain)

ypred=classifier.predict(X_test)

from sklearn.metrics import confusion_matrix
cm=confusion_matrix(ytest,ypred)

# Visualising the Test set results
from matplotlib.colors import ListedColormap
X_set, y_set = X_train, ytrain
X1, X2 = np.meshgrid(np.arange(start = X_set[:, 0].min() - 1, stop = X_set[:, 0].max() + 1, step = 0.05),
                     np.arange(start = X_set[:, 1].min() - 1, stop = X_set[:, 1].max() + 1, step = 0.05))
plt.contourf(X1, X2, classifier.predict(np.array([X1.ravel(), X2.ravel()]).T).reshape(X1.shape),
             alpha = 0.75, cmap = ListedColormap(('red', 'green')))
plt.xlim(X1.min(), X1.max())
plt.ylim(X2.min(), X2.max())
for i, j in enumerate(np.unique(y_set)):
    plt.scatter(X_set[y_set == j, 0], X_set[y_set == j, 1],
                c = ListedColormap(('red', 'green'))(i), label = j)
plt.title('Logistic Regression (Test set)')
plt.xlabel('Age')
plt.ylabel('Estimated Salary')
plt.legend()
